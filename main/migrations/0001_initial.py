# Generated by Django 4.1.3 on 2022-12-03 18:26

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('photo', models.ImageField(null=True, upload_to='')),
                ('correct', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bootcamp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.CharField(max_length=250)),
                ('trials', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.CharField(max_length=200)),
                ('answers', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.answer')),
            ],
        ),
        migrations.CreateModel(
            name='Explonation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_explonation', models.URLField(null=True)),
                ('audio_explonation', models.URLField(default=models.URLField(null=True), null=True)),
                ('text_explonation', models.TextField()),
                ('kinetic_explonation', models.URLField(default=models.URLField(null=True), null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True, default='https://www.goodwill.ab.ca/wp-content/uploads/2018/04/happy-the-office-GIF-downsized.gif', null=True)),
                ('bootcamp', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.bootcamp')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.exam')),
                ('explonation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.explonation')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('photo', models.ImageField(default='graduation-cap.svg', null=True, upload_to='')),
                ('description', models.TextField(blank=True, null=True)),
                ('courses', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.topic')),
            ],
        ),
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('photo', models.ImageField(default='graduation-cap.svg', null=True, upload_to='')),
                ('description', models.TextField(blank=True, max_length=300, null=True)),
                ('courses', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.course')),
            ],
        ),
        migrations.AddField(
            model_name='bootcamp',
            name='case_check',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.exam'),
        ),
        migrations.AddField(
            model_name='bootcamp',
            name='case_explonation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.explonation'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=50)),
                ('second_name', models.CharField(max_length=50, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('avatar', models.ImageField(default='user.png', null=True, upload_to='')),
                ('classes', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.classes')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
